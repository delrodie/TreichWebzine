<?php

namespace AppBundle\Repository;

/**
 * ActualiteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActualiteRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Compteur d'articles
     */
    public function compteur($statut = null, $type = null)
    {
        if ($statut && $type){
            return $this->listDesc()->select('count(a.id)')
                        ->leftJoin('a.type', 't')
                        ->where('t.slug = :type')
                        ->andWhere('a.statut = 1')
                        ->setParameter('type', $type)
                        ->getQuery()->getSingleScalarResult()
                ;
        }elseif ($statut){
            return $this->listDesc()->select('count(a.id)')->where('a.statut = 1')->getQuery()->getSingleScalarResult();
        }else{
            return $this->listDesc()->select('count(a.id)')->getQuery()->getSingleScalarResult();
        }
    }

    /**
     * Liste des actualités
     */
    public function findListDesc($statut = null, $limit = null, $offset = null)
    {
        if ($statut){
            return $this->listDesc($limit, $offset)->where('a.statut = 1')->getQuery()->getResult();
        } else{
            return $this->listDesc($limit, $offset)->getQuery()->getResult();
        }
    }

    /**
     * Liste des actualités selon le type
     */
    public function findTypeListDesc($type1, $type2 = null, $limit = null, $offset = null)
    {
        if ($type2){
            return $this->listDesc($limit, $offset)
                        ->leftJoin('a.type', 't')
                        ->where('t.slug LIKE :type1')
                        ->orWhere('t.slug LIKE :type2')
                        ->andWhere('a.statut = 1')
                        ->setParameters([
                            'type1' => '%'.$type1.'%',
                            'type2' => '%'.$type2.'%',
                        ])
                        ->getQuery()->getResult()
                ;
        } else{
            return $this->listDesc($limit, $offset)
                        ->leftJoin('a.type', 't')
                        ->where('t.slug LIKE :type')
                        ->andWhere('a.statut = 1')
                        ->setParameter('type', '%'.$type1.'%')
                        ->getQuery()->getResult()
                ;
        }
    }

    /**
     * Liste decroissantes des actualités
     */
    public function listDesc ($limit=null, $offset=null)
    {
        return $this->createQueryBuilder('a')
                    ->orderBy('a.id', 'DESC')
                    ->setFirstResult($offset)
                    ->setMaxResults($limit)
            ;
    }
}
